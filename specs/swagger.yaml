openapi: 3.0.0
info:
  description: "API in dart backend"
  version: "1.0.10"
  title: "API ACADEMIA"
servers:
  - url: http://localhost:4245
    description: Local server
tags:
  - name: "auth"
    description: "Access to Auth"
  - name: "user"
    description: "Access to User"

paths:
  /auth/login:
    get:
      tags:
        - "auth"
      summary: login with credentials(email/password)
      security:
        - basicAuth: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tokenization"
        "404":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackendException"
        "403":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackendException"
  /auth/check_token:
    get:
      tags:
        - "auth"
      summary: Check bearer token
      security:
        - bearerAuth: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackendException"
        "403":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackendException"
  /auth/refresh_token:
    get:
      tags:
        - "auth"
      summary: refresh bearer token
      security:
        - bearerRefreshAuth: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tokenization"
        "404":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackendException"
        "403":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackendException"

  /user/{id}:
    get:
      tags:
        - "user"
      summary: get user by id
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackendException"
    delete:
      tags:
        - "user"
      summary: delete user by id
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackendException"
  /user:
    get:
      tags:
        - "user"
      summary: get all user
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "404":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackendException"
    post:
      tags:
        - "user"
      summary: create new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreate"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "404":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackendException"
    put:
      tags:
        - "user"
      summary: update user
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "404":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackendException"

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "Auth header (Authorization) Access Token"
    bearerRefreshAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "Refresh Token"
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        role:
          type: string
          default: user
          enum:
            - "dev"
            - "admin"
            - "manager"
    UserCreate:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
        role:
          type: string
          default: user
          enum:
            - "dev"
            - "admin"
            - "manager"
    BackendException:
      type: object
      properties:
        error:
          type: string
    Tokenization:
      type: object
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
